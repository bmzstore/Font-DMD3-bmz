

/*
 * Fareed Read
 * http://www.facebook.com/fareedreads
 *
 * bmzSegment21
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : bmzSegment21.h
 * Date                : 29.02.2020
 * Font size in bytes  : 1696
 * Font width          : 8
 * Font height         : -21
 * Font first char     : 48
 * Font last char      : 58
 * Font used chars     : 10
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef BMZSEGMENT21_H
#define BMZSEGMENT21_H

#define BMZSEGMENT21_WIDTH 8
#define BMZSEGMENT21_HEIGHT -21

const static uint8_t bmzSegment21[] PROGMEM = {
    0x06, 0xA0, // size
    0x08, // width
    0x15, // height
    0x30, // first char
    0x0A, // char count
    
    // char widths
    0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 
    
    
    // font data
    0xFE, 0xFD, 0xFB, 0x07, 0x07, 0xFB, 0xFD, 0xFE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x78, 0xB8, 0xD8, 0xE0, 0xE0, 0xD8, 0xB8, 0x78, // 48
    0x00, 0x00, 0x00, 0xFC, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF7, 0xFF, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x78, 0x38, 0x00, 0x00, // 49
    0x01, 0x03, 0x07, 0x07, 0x07, 0xFB, 0xFD, 0xFE, 0xFC, 0xFA, 0xF6, 0x0E, 0x0E, 0x0D, 0x0B, 0x07, 0x78, 0xB8, 0xD8, 0xE0, 0xE0, 0xE0, 0xC0, 0x80, // 50
    0x01, 0x03, 0x07, 0x07, 0x07, 0xFB, 0xFD, 0xFE, 0x00, 0x04, 0x0E, 0x0E, 0x0E, 0xF5, 0xFB, 0xFF, 0x80, 0xC0, 0xE0, 0xE0, 0xE0, 0xD8, 0xB8, 0x78, // 51
    0xFF, 0xFE, 0xFC, 0x00, 0x00, 0xFC, 0xFE, 0xFF, 0x07, 0x0B, 0x0D, 0x0E, 0x0E, 0xF5, 0xFB, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x78, 0xF8, // 52
    0xFE, 0xFD, 0xFB, 0x07, 0x07, 0x07, 0x03, 0x01, 0x07, 0x0B, 0x0D, 0x0E, 0x0E, 0xF6, 0xFA, 0xFC, 0x80, 0xC0, 0xE0, 0xE0, 0xE0, 0xD8, 0xB8, 0x78, // 53
    0xFE, 0xFD, 0xFB, 0x07, 0x07, 0x07, 0x03, 0x01, 0xFF, 0xFB, 0xF5, 0x0E, 0x0E, 0xF6, 0xFA, 0xFC, 0x78, 0xB8, 0xD8, 0xE0, 0xE0, 0xD8, 0xB8, 0x78, // 54
    0x01, 0x03, 0x07, 0x07, 0x07, 0xFB, 0xFD, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0xFB, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x78, 0xF8, // 55
    0xFE, 0xFD, 0xFB, 0x07, 0x07, 0xFB, 0xFD, 0xFE, 0xFF, 0xFB, 0xF5, 0x0E, 0x0E, 0xF5, 0xFB, 0xFF, 0x78, 0xB8, 0xD8, 0xE0, 0xE0, 0xD8, 0xB8, 0x78, // 56
    0xFE, 0xFD, 0xFB, 0x07, 0x07, 0xFB, 0xFD, 0xFE, 0x07, 0x0B, 0x0D, 0x0E, 0x0E, 0xF5, 0xFB, 0xFF, 0x80, 0xC0, 0xE0, 0xE0, 0xE0, 0xD8, 0xB8, 0x78 // 57
    
};

#endif
